<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.shaunk.mapper.UserMapper">

  <select id="listUser" parameterType="com.shaunk.vo.QueryUserVo" resultType="com.shaunk.vo.UserVo">
    select
      su.id id,
      su.nick_name nickName,
      su.username username,
      su.avatar avatar,
      su.phone phone,
      su.email email,
      su.status status,
      su.create_time createTime,
      su.update_time updateTime,
      sr.id roleId,
      sr.name roleName
    from system_user su
    left join system_user_role sur on su.id = sur.user_id
    left join system_role sr on sur.role_id = sr.id
    <where>
      <if test="phone != null and phone != ''">
        and phone like concat('%',#{phone},'%')
      </if>
      <if test="nickName != null and nickName != ''">
        and nick_name like concat('%',#{nickName},'%')
      </if>
      <if test="email != null and email != ''">
        and email like concat('%',#{email},'%')
      </if>
      <if test="status != null">
        and status = #{status}
      </if>
    </where>
    order by su.create_time desc
  </select>

  <select id="selectUserById" parameterType="java.lang.Integer" resultType="com.shaunk.vo.UserVo">
    select
      su.id id,
      su.nick_name nickName,
      su.username username,
      su.avatar avatar,
      su.phone phone,
      su.email email,
      su.status status,
      su.create_time createTime,
      su.update_time updateTime,
      sr.id roleId,
      sr.name roleName
    from system_user su
    left join system_user_role sur on su.id = sur.user_id
	left join system_role sr on sur.role_id = sr.id
    where su.id = #{userId}
    limit 1
  </select>

  <select id="selectUserInfoByUsername" parameterType="java.lang.String"  resultType="com.shaunk.core.vo.UserInfo">
    select
      su.id id,
      su.nick_name nickName,
      su.username username,
      su.password password,
      su.avatar avatar,
      su.phone phone,
      su.email email,
      su.status status,
      su.token_key tokenKey,
      sr.id roleId,
      sr.name roleName
    from system_user su
    left join system_user_role sur on su.id = sur.user_id
    left join system_role sr on sur.role_id = sr.id
    where su.username = #{username}
    limit 1
  </select>

  <select id="selectUserInfoByUserId" parameterType="java.lang.Integer"  resultType="com.shaunk.core.vo.UserInfo">
    select
      su.id id,
      su.nick_name nickName,
      su.username username,
      su.password password,
      su.avatar avatar,
      su.phone phone,
      su.email email,
      su.status status,
      su.token_key tokenKey,
      sr.id roleId,
      sr.name roleName
    from system_user su
    left join system_user_role sur on su.id = sur.user_id
    left join system_role sr on sur.role_id = sr.id
    where su.id = #{userId}
    limit 1
  </select>

  <select id="selectUserUsernameIsExists" resultType="java.lang.Integer">
    select
     count(1) x
    from system_user
    <where>
      username = #{username}
      <if test="userId != null">
        and id != #{userId}
      </if>
    </where>
  </select>
</mapper>